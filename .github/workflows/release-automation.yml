name: Automated Release

on:
  push:
    branches: [main]

permissions:
  contents: write
  packages: write
  issues: write
  pull-requests: write
  id-token: write  # For OIDC/cosign

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683
        with:
          fetch-depth: 0
          persist-credentials: false

      - name: Setup Node.js
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci
        env:
          PUPPETEER_SKIP_DOWNLOAD: true

      - name: Run tests
        run: npm test

      - name: Build
        run: npm run build

      - name: Install semantic-release plugins
        run: |
          npm install --save-dev \
            @semantic-release/changelog \
            @semantic-release/git \
            @semantic-release/github \
            @semantic-release/npm \
            @semantic-release/commit-analyzer \
            @semantic-release/release-notes-generator

      - name: Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npx semantic-release

  docker:
    name: Build and Push Docker
    needs: release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683
        with:
          fetch-depth: 0

      - name: Get latest tag
        id: get_tag
        run: |
          git fetch --tags
          echo "tag=$(git describe --tags --abbrev=0)" >> $GITHUB_OUTPUT
          echo "version=$(git describe --tags --abbrev=0 | sed 's/v//')" >> $GITHUB_OUTPUT

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}
          tags: |
            type=raw,value=latest,priority=1000
            type=raw,value=${{ steps.get_tag.outputs.tag }}
            type=raw,value=${{ steps.get_tag.outputs.version }}
            type=semver,pattern={{version}},value=${{ steps.get_tag.outputs.tag }}
            type=semver,pattern={{major}}.{{minor}},value=${{ steps.get_tag.outputs.tag }}
            type=semver,pattern={{major}},value=${{ steps.get_tag.outputs.tag }}

      - name: Build and push Docker image
        id: docker
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/amd64,linux/arm64,linux/arm/v7
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            VERSION=${{ steps.get_tag.outputs.version }}
            BUILD_DATE=${{ steps.meta.outputs.created }}
            VCS_REF=${{ github.sha }}

      # Cosign signing removed temporarily - was causing workflow failures
      # TODO: Re-enable when GitHub OIDC integration is properly configured
      
      - name: Generate SBOM
        uses: anchore/sbom-action@v0
        with:
          image: ghcr.io/${{ github.repository }}:${{ steps.get_tag.outputs.tag }}
          format: spdx-json
          output-file: sbom.spdx.json