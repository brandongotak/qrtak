name: Container Security Scan

on:
  workflow_dispatch:
  push:
    branches: [main]
    paths:
      - 'Dockerfile*'
      - 'package*.json'
      - '.github/workflows/docker-security-scan.yml'
  pull_request:
    paths:
      - 'Dockerfile*'
      - 'package*.json'

permissions:
  contents: read
  security-events: write

jobs:
  trivy-scan:
    name: Trivy Security Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Build Docker image
        run: docker build -t qrtak:scan .

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@6e7b7d1fd3e4fef0c5fa8cce1229c54b2c9bd0d8 # v0.24.0
        with:
          image-ref: qrtak:scan
          format: 'sarif'
          output: 'trivy-results.sarif'
          severity: 'CRITICAL,HIGH'
          scan-type: 'image'
          hide-progress: false
          exit-code: '1'

      - name: Upload Trivy scan results to GitHub Security
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: 'trivy-results.sarif'
          category: 'trivy'

      - name: Trivy Summary Report
        uses: aquasecurity/trivy-action@v0.28.0
        if: always()
        with:
          image-ref: qrtak:scan
          format: 'table'
          severity: 'CRITICAL,HIGH,MEDIUM'
          scan-type: 'image'

  grype-scan:
    name: Grype Security Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Build Docker image
        run: docker build -t qrtak:scan .

      - name: Run Grype vulnerability scanner
        uses: anchore/scan-action@5ed195fb06065271e8c44c6802e4c3148c83a2f5 # v6.0.0
        id: grype
        with:
          image: qrtak:scan
          fail-build: true
          severity-cutoff: high
          output-format: sarif

      - name: Upload Grype scan results to GitHub Security
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: ${{ steps.grype.outputs.sarif }}
          category: 'grype'

  sbom-generation:
    name: Generate SBOM
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Build Docker image
        run: docker build -t qrtak:scan .

      - name: Generate SBOM with Syft
        uses: anchore/sbom-action@61119d458adab75f756bc0b9e4bde25725f86a7a # v0.17.2
        with:
          image: qrtak:scan
          format: spdx-json
          output-file: sbom.spdx.json
          upload-artifact: true
          upload-artifact-retention: 30

      - name: Generate SBOM with Trivy
        run: |
          docker run --rm -v /var/run/docker.sock:/var/run/docker.sock \
            aquasec/trivy image --format cyclonedx --output sbom.cyclonedx.json \
            qrtak:scan

      - name: Upload SBOM artifacts
        uses: actions/upload-artifact@v4
        with:
          name: sbom-reports
          path: |
            sbom.spdx.json
            sbom.cyclonedx.json
          retention-days: 30

  compare-scanners:
    name: Compare Scanner Results
    runs-on: ubuntu-latest
    needs: [trivy-scan, grype-scan]
    if: always()
    steps:
      - name: Summary
        run: |
          echo "## Container Security Scan Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "| Scanner | Status |" >> $GITHUB_STEP_SUMMARY
          echo "|---------|--------|" >> $GITHUB_STEP_SUMMARY
          echo "| Trivy | ${{ needs.trivy-scan.result }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Grype | ${{ needs.grype-scan.result }} |" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "View detailed results in the Security tab." >> $GITHUB_STEP_SUMMARY